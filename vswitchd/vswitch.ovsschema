{"name": "Open_vSwitch",
 "comment": "Configuration for one Open vSwitch daemon.",
 "tables": {
   "Open_vSwitch": {
     "comment": "Configuration for an Open vSwitch daemon.",
     "columns": {
       "bridges": {
         "comment": "Set of bridges managed by the daemon.",
         "type": {"key": {"type": "uuid",
                          "refTable": "Bridge"},
                  "min": 0, "max": "unlimited"}},
       "controller": {
         "comment": "Default Controller used by bridges.",
         "type": {"key": {"type": "uuid",
                          "refTable": "Controller"},
                   "min": 0, "max": 1}},
       "managers": {
         "comment": "Remote database clients to which the Open vSwitch's database server should connect or to which it should listen.",
         "type": {"key": "string", "min": 0, "max": "unlimited"}},
       "ssl": {
         "comment": "SSL used globally by the daemon.",
         "type": {"key": {"type": "uuid",
                          "refTable": "SSL"},
                  "min": 0, "max": 1}},
       "next_cfg": {
         "comment": "Sequence number for client to increment when it modifies the configuration and wishes to wait for Open vSwitch to finish applying the changes.",
         "type": "integer"},
       "cur_cfg": {
         "comment": "Sequence number that Open vSwitch sets to the current value of 'next_cfg' after it finishing applying a set of configuration changes.",
         "type": "integer"}}},
   "Bridge": {
     "comment": "Configuration for a bridge within an Open_vSwitch.",
     "columns": {
       "name": {
         "comment": "Bridge identifier.  Should be alphanumeric and no more than about 8 bytes long.  Must be unique among the names of ports, interfaces, and bridges on a host.",
         "type": "string"},
       "datapath_type": {
         "comment": "Name of datapath provider.  The kernel datapath has type \"system\".  The userspace datapath has type \"netdev\".",
         "type": "string"},
       "datapath_id": {
         "comment": "Reports the OpenFlow datapath ID in use.  Exactly 12 hex digits.",
         "type": {"key": "string", "min": 0, "max": 1},
         "ephemeral": true},
       "ports": {
         "comment": "Ports included in the bridge.",
         "type": {"key": {"type": "uuid",
                          "refTable": "Port"},
                  "min": 0, "max": "unlimited"}},
       "mirrors": {
         "comment": "Port mirroring configuration.",
         "type": {"key": {"type": "uuid",
                          "refTable": "Mirror"},
                  "min": 0, "max": "unlimited"}},
       "netflow": {
         "comment": "NetFlow configuration.",
         "type": {"key": {"type": "uuid",
                          "refTable": "NetFlow"},
                  "min": 0, "max": 1}},
       "sflow": {
         "comment": "sFlow configuration.",
         "type": {"key": {"type": "uuid",
                          "refTable": "sFlow"},
                  "min": 0, "max": 1}},
       "controller": {
         "comment": "OpenFlow controller.  If unset, defaults to that specified by the parent Open_vSwitch.",
         "type": {"key": {"type": "uuid",
                          "refTable": "Controller"},
                  "min": 0, "max": 1}},
       "other_config": {
         "comment": "Key-value pairs for configuring rarely used bridge features.  The currently defined key-value pairs are: \"datapath-id\", exactly 12 hex digits to set the OpenFlow datapath ID to a specific value; \"hwaddr\", exactly 12 hex digits in the form \"XX:XX:XX:XX:XX:XX\" to set the hardware address of the local port and influence the datapath ID.",
         "type": {"key": "string", "value": "string", "min": 0, "max": "unlimited"}},
       "external_ids": {
         "comment": "Key-value pairs that identify this bridge's role in external systems.  The currently defined key-value pairs are: \"xs-network-uuids\", a space-delimited set of the Citrix XenServer network UUIDs with which this bridge is associated; \"xs-network-names\", a semicolon-delimited set of Citrix XenServer network names with which this bridge is associated.",
         "type": {"key": "string", "value": "string", "min": 0, "max": "unlimited"}},
       "flood_vlans": {
         "comment": "VLAN IDs of VLANs on which MAC address learning should be disabled, so that packets are flooded instead of being sent to specific ports that are believed to contain packets' destination MACs.  This should ordinarily be used to disable MAC learning on VLANs used for mirroring (RSPAN VLANs).  It may also be useful for debugging.",
         "type": {"key": {"type": "integer",
                          "minInteger": 0, 
                          "maxInteger": 4095},
                  "min": 0, "max": 4096}}}},
   "Port": {
     "comment": "A port within a Bridge.  May contain a single Interface or multiple (bonded) Interfaces.",
     "columns": {
       "name": {
         "comment": "Port name.  Should be alphanumeric and no more than about 8 bytes long.    May be the same as the interface name, for non-bonded ports.  Must otherwise be unique among the names of ports, interfaces, and bridges on a host.",
         "type": "string"},
       "interfaces": {
         "comment": "The Port's Interfaces.  If there is more than one, this is a bonded Port.",
         "type": {"key": {"type": "uuid",
                          "refTable": "Interface"},
                  "min": 1, "max": "unlimited"}},
       "trunks": {
         "comment": "The 802.1Q VLAN(s) that this port trunks.  Should be empty if this port trunks all VLAN(s) or if this is not a trunk port.",
         "type": {"key": {"type": "integer",
                          "minInteger": 0,
                          "maxInteger": 4095},
                  "min": 0, "max": 4096}},
       "tag": {
         "comment": "This port's implicitly tagged VLAN.  Should be empty if this is a trunk port.",
         "type": {"key": {"type": "integer",
                          "minInteger": 0,
                          "maxInteger": 4095},
                  "min": 0, "max": 1}},
       "mac": {
         "comment": "The MAC address to use for this port for the purpose of choosing the bridge's MAC address.  This column does not necessarily reflect the port's actual MAC address, nor will setting it change the port's actual MAC address.",
         "type": {"key": {"type": "string"},
                  "min": 0, "max": 1}},
       "bond_updelay": {
         "comment": "For a bonded port, the number of milliseconds for which carrier must stay up on an interface before the interface is considered to be up.  Ignored for non-bonded ports.",
         "type": "integer"},
       "bond_downdelay": {
         "comment": "For a bonded port, the number of milliseconds for which carrier must stay down on an interface before the interface is considered to be down.  Ignored for non-bonded ports.",
         "type": "integer"},
       "bond_fake_iface": {
         "comment": "For a bonded port, whether to create a fake interface with the name of the port.  Use only for compatibility with legacy software that requires this.",
         "type": "boolean"},
       "fake_bridge": {
         "comment": "Does this port represent a sub-bridge for its tagged VLAN within the Bridge?  See ovs-vsctl(8) for more information.",
         "type": "boolean"},
       "other_config": {
         "comment": "Key-value pairs for configuring rarely used port features.  The currently defined key-value pairs are: \"hwaddr\", exactly 12 hex digits in the form \"XX:XX:XX:XX:XX:XX\".",
         "type": {"key": "string", "value": "string", "min": 0, "max": "unlimited"}},
       "external_ids": {
         "comment": "Key-value pairs that identify this port's role in external systems.  No key-value pairs native to Port are currently defined.  For fake bridges (see the \"fake-bridge\" column), external IDs for the fake bridge are defined here by prefixing their keys with \"fake-bridge\", e.g. \"fake-bridge-xs-network-uuids\".",
         "type": {"key": "string", "value": "string", "min": 0, "max": "unlimited"}}}},
   "Interface": {
     "comment": "An interface within a Port.",
     "columns": {
       "name": {
         "comment": "Interface name.  Should be alphanumeric and no more than about 8 bytes long.  May be the same as the port name, for non-bonded ports.  Must otherwise be unique among the names of ports, interfaces, and bridges on a host.",
         "type": "string"},
       "type": {
         "comment": "The interface type.  Normal network devices, e.g.  eth0, have type \"system\" or \"\" (which are synonyms).  Internal ports have type \"internal\".  TUN/TAP devices have type \"tap\".  GRE devices have type \"gre\".",
         "type": "string"},
       "options": {
         "comment": "Configuration options whose interpretation varies based on \"type\".",
         "type": {"key": "string", "value": "string", "min": 0, "max": "unlimited"}},
       "ingress_policing_rate": {
         "comment": "Maximum rate for data received on this interface, in kbps.  Set to 0 to disable policing.",
         "type": {"key": {"type": "integer",
                          "minInteger": 0}}},
       "ingress_policing_burst": {
         "comment": "Maximum burst size for data received on this interface, in kb.  The default burst size if set to 0 is 1000 kb.",
         "type": {"key": {"type": "integer",
                          "minInteger": 0}}},
       "mac": {
         "comment": "Ethernet address to set for this interface.  If unset then the default MAC address is used.  May not be supported on all interfaces.",
         "type": {"key": {"type": "string"},
                  "min": 0, "max": 1}},
       "external_ids": {
         "comment": "Key-value pairs that identify this interface's role in external systems.  The currently defined key-value pairs are: \"xs-vif-uuid\", the UUID of the Citrix XenServer VIF associated with this interface; \"xs-network-uuid\", the UUID of the Citrix XenServer network to which this interface is attached; \"xs-vif-vm-uuid\", the UUID of the Citrix XenServer VM to which this interface belongs; \"xs-vif-mac\", the value of the \"MAC\" field in the Citrix XenServer VIF record for this interface.",
         "type": {"key": "string", "value": "string", "min": 0, "max": "unlimited"}},
       "ofport": {
         "comment": "OpenFlow port number for this interface.  This is populated when the port number becomes known.  Before it is populated its value will be missing.  If the interface cannot be added then this is indicated by a value of -1.",
         "type": {"key": "integer", "min": 0, "max": 1},
         "ephemeral": true}}},
   "Mirror": {
     "comment": "A port mirror within a Bridge.",
     "columns": {
       "name": {
         "comment": "Arbitrary identifier for the Mirror.",
         "type": "string"},
       "select_src_port": {
         "comment": "Ports on which arriving packets are selected for mirroring.  If this column and select_dst_port are both empty, then all packets on all ports are selected for mirroring.",
         "type": {"key": {"type": "uuid",
                          "refTable": "Port"},
                   "min": 0, "max": "unlimited"}},
       "select_dst_port": {
         "comment": "Ports on which departing packets are selected for mirroring.",
         "type": {"key": {"type": "uuid",
                          "refTable": "Port"}, "min": 0, "max": "unlimited"}},
       "select_vlan": {
         "comment": "VLANs on which packets are selected for mirroring.  An empty set selects packets on all VLANs.",
         "type": {"key": {"type": "integer",
                          "minInteger": 0,
                          "maxInteger": 4095},
                  "min": 0, "max": 4096}},
       "output_port": {
         "comment": "Output port for selected packets.  Mutually exclusive with output_vlan.",
         "type": {"key": {"type": "uuid",
                          "refTable": "Port"}, "min": 0, "max": 1}},
       "output_vlan": {
         "comment": "Output VLAN for selected packets.  Mutually exclusive with output_port.",
         "type": {"key": {"type": "integer",
                          "minInteger": 1,
                          "maxInteger": 4095},
                  "min": 0, "max": 1}}}},
   "NetFlow": {
     "comment": "A NetFlow target.",
     "columns": {
       "targets": {
         "comment": "NetFlow targets in the form \"IP:PORT\".",
         "type": {"key": {"type": "string"},
                  "min": 1, "max": "unlimited"}},
       "engine_type": {
         "comment": "Engine type to use in NetFlow messages.  Defaults to datapath index if not specified.",
         "type": {"key": {"type": "integer",
                          "minInteger": 0,
                          "maxInteger": 255},
                  "min": 0, "max": 1}},
       "engine_id": {
         "comment": "Engine ID to use in NetFlow messages.  Defaults to datapath index if not specified.",
         "type": {"key": {"type": "integer",
                          "minInteger": 0,
                          "maxInteger": 255},
                  "min": 0, "max": 1}},
       "add_id_to_interface": {
         "comment": "Place least-significant 7 bits of engine ID into most significant bits of ingress and egress interface fields of NetFlow records?",
         "type": "boolean"},
       "active_timeout": {
         "comment": "Active timeout interval, in seconds.  A value of 0 requests the default timeout; a negative value disables active timeouts.",
         "type": {"key": {"type": "integer",
                          "minInteger": -1}}}}},
   "sFlow": {
     "comment": "A sFlow target.",
     "columns": {
       "targets": {
         "comment": "sFlow targets in the form \"IP:PORT\".",
         "type": {"key": "string", "min": 1, "max": "unlimited"}},
       "sampling": {
         "comment": "Rate at which packets should be sampled and sent to the collector.  If not specified, defaults to 400, which means one out of 400, on average, will be sent to the collector.",
         "type": {"key": "integer", "min": 0, "max": 1}},
       "polling": {
         "comment": "Polling rate in seconds to send port statistics to the collector.  If not specified, defaults to 30 seconds.",
         "type": {"key": "integer", "min": 0, "max": 1}},
       "header": {
         "comment": "Number of bytes of a sampled packet to send to the collector.  If not specified, defaults is 128 bytes.",
         "type": {"key": "integer", "min": 0, "max": 1}},
       "agent": {
         "comment": "IP address to report as \"agent address\" to collectors.  If not specified, defaults to collector's \"local_ip\" value.  If neither is specified, sFlow is disabled.",
         "type": {"key": "string", "min": 0, "max": 1}}}},
   "Controller": {
     "comment": "An OpenFlow controller.",
     "columns": {
       "target": {
         "comment": "Connection method for controller, e.g. \"ssl:...\", \"tcp:...\".  The special string \"discover\" enables controller discovery.  The special string \"none\" disables the controller.",
         "type": "string"},
       "max_backoff": {
         "comment": "Maximum number of milliseconds to wait between connection attempts.  Default is implementation-specific.",
         "type": {"key": {"type": "integer",
                          "minInteger": 1000},
                  "min": 0, "max": 1}},
       "inactivity_probe": {
         "comment": "Maximum number of milliseconds of idle time on connection to controller before sending an inactivity probe message.  Default is implementation-specific.",
         "type": {"key": "integer", "min": 0, "max": 1}},
       "fail_mode": {
         "comment": "Either \"standalone\" or \"secure\", or empty to use the implementation's default.",
         "type": {"key": {"type": "string"},
                  "min": 0, "max": 1}},
       "discover_accept_regex": {
         "comment": "If \"target\" is \"discover\", a POSIX extended regular expression against which the discovered controller location is validated.  If not specified, the default is implementation-specific.",
         "type": {"key": "string", "min": 0, "max": 1}},
       "discover_update_resolv_conf": {
         "comment": "If \"target\" is \"discover\", whether to update /etc/resolv.conf when the controller is discovered.  If not specified, the default is implementation-specific.",
         "type": {"key": "boolean", "min": 0, "max": 1}},
       "connection_mode": {
         "comment": "Either \"in-band\" or \"out-of-band\".  If not specified, the default is implementation-specific.",
         "type": {"key": {"type": "string"},
                  "min": 0, "max": 1}},
       "local_ip": {
         "comment": "If \"target\" is not \"discover\", the IP address to configure on the local port.",
         "type": {"key": {"type": "string"},
                  "min": 0, "max": 1}},
       "local_netmask": {
         "comment": "If \"target\" is not \"discover\", the IP netmask to configure on the local port.",
         "type": {"key": {"type": "string"},
                  "min": 0, "max": 1}},
       "local_gateway": {
         "comment": "If \"target\" is not \"discover\", the IP gateway to configure on the local port.",
         "type": {"key": {"type": "string"},
                  "min": 0, "max": 1}},
       "controller_rate_limit": {
         "comment": "The maximum rate at which packets will be forwarded to the OpenFlow controller, in packets per second.  If not specified, the default is implementation-specific.",
         "type": {"key": {"type": "integer",
                          "minInteger": 100},
                  "min": 0, "max": 1}},
       "controller_burst_limit": {
         "comment": "The maximum number of unused packet credits that the bridge will allow to accumulate, in packets.  If not specified, the default is implementation-specific.",
         "type": {"key": {"type": "integer", 
                          "minInteger": 25},
                  "min": 0, "max": 1}}}},
   "SSL": {
     "comment": "SSL configuration for an Open_vSwitch.",
     "columns": {
       "private_key": {
         "comment": "Name of a PEM file containing the private key used as the switch's identity for SSL connections to the controller.",
         "type": "string"},
       "certificate": {
         "comment": "Name of a PEM file containing a certificate, signed by the certificate authority (CA) used by the controller and manager, that certifies the switch's private key, identifying a trustworthy switch.",
         "type": "string"},
       "ca_cert": {
         "comment": "Name of a PEM file containing the CA certificate used to verify that the switch is connected to a trustworthy controller.",
         "type": "string"},
       "bootstrap_ca_cert": {
         "comment": "If set to true, then Open vSwitch will attempt to obtain the CA certificate from the controller on its first SSL connection and save it to the named PEM file. If it is successful, it will immediately drop the connection and reconnect, and from then on all SSL connections must be authenticated by a certificate signed by the CA certificate thus obtained.  This option exposes the SSL connection to a man-in-the-middle attack obtaining the initial CA certificate, but it may be useful for bootstrapping.",
         "type": "boolean"}}}}}
